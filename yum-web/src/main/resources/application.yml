mybatis-plus:
  global-config:
    db-config:
      logic-delete-field: is_delete  # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
      select-strategy: not_empty
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    call-setters-on-nulls: true




spring:
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 30MB

  mail:
    host: smtp.qq.com
    username: lxingxu@qq.com
    password: pwgxujyqyavtbgdf
    port: 587
    properties:
      mail:
        stmp:
          tsl:
            enable: true
  task:
    execution:
      pool:
        # 核心线程数
        core-size: 60
        # 最大线
        max-size: 100
        # 空闲线程存活时间
        keep-alive: 60s
        # 是否允许核心线程超时
        allow-core-thread-timeout: true
        # 线程队列数量
        queue-capacity: 100
      shutdown:
        # 线程关闭等待
        await-termination: false


  profiles:
    active: prod
#    active: dev

  jackson:
    default-property-inclusion: non_null

  mvc:
    throw-exception-if-no-handler-found: true
    static-path-pattern: /static/**
    async:
      request-timeout: 1000000

  redis:
    host: 121.5.149.9
    port: 6379
    jedis:
      pool:
        max-active: -1
        max-wait: 3000ms
    timeout: 3000ms
    password:

logging:
  level:
    root: info
    com.ljnt: debug


---
server:
  port: 9090
  tomcat:
    max-connections: 1000000

swagger:
  enable: true

spring:
  datasource:
    #   数据源基本配置
    username: yum
    password: K5FtaytD4CKFdme3
    url: jdbc:mysql://121.5.149.9:3306/yum?useUnicode=true&characterEncoding=utf-8&serverTimezone=Hongkong
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #   数据源其他配置
    #初始化时建立物理连接的个数
    druid:
      initial-size: 5
      #最小连接池数量
      min-idle: 5
      #最大连接池数量 maxIdle已经不再使用
      max-active: 20
      #获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      #销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
      min-evictable-idle-time-millis: 30000
      #用来检测连接是否有效的sql 必须是一个查询语句
      #mysql中为 select 'x'
      #oracle中为 select 1 from dual
      validation-query: select 'x'
      #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      #归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement
      pool-prepared-statements: true
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      #配置监拉统计挡成的filters. stat: 监控统计、Log4j:日志记录、waLL: 防御sqL注入
      #如果启用日志记录时报错java.lang.ClassNotFoundException: org.apache.log4j.Priority
      #则导入Log4j 依赖即时，Maven 地址: https://mvnrepository. com/artifact/log4j/log4
      filters: stat,wall,log4j
      max-pool-prepared-statement-per-connection-size: 20
      use-global-data-source-stat: true
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      filter:
        stat:
          connection-stack-trace-enable: true
          db-type: mysql
          log-slow-sql: true
          slow-sql-millis: 2000
        wall:
          config:
            multi-statement-allow: true
      web-stat-filter:
        enabled: true
        exclusions:
          - "*.js"
          - "*.gif"
          - "*.jpg"
          - "*.png"
          - "*.css"
          - ".ico"
          - "/druid/*"
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        login-username: admin
        login-password: asdf123456
  config:
    activate:
      on-profile: dev

---


server:
  port: 8080


spring:
  datasource:
    #   数据源基本配置
    username: yum
    password: K5FtaytD4CKFdme3
    url: jdbc:mysql://121.5.149.9:3306/yum?useUnicode=true&characterEncoding=utf-8&serverTimezone=Hongkong
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #   数据源其他配置
    #初始化时建立物理连接的个数
    druid:
      initial-size: 5
      #最小连接池数量
      min-idle: 5
      #最大连接池数量 maxIdle已经不再使用
      max-active: 20
      #获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      #销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
      min-evictable-idle-time-millis: 30000
      #用来检测连接是否有效的sql 必须是一个查询语句
      #mysql中为 select 'x'
      #oracle中为 select 1 from dual
      validation-query: select 'x'
      #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      #归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement
      pool-prepared-statements: true
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      #配置监拉统计挡成的filters. stat: 监控统计、Log4j:日志记录、waLL: 防御sqL注入
      #如果启用日志记录时报错java.lang.ClassNotFoundException: org.apache.log4j.Priority
      #则导入Log4j 依赖即时，Maven 地址: https://mvnrepository. com/artifact/log4j/log4
      filters: stat,wall,log4j
      max-pool-prepared-statement-per-connection-size: 20
      use-global-data-source-stat: true
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      filter:
        stat:
          connection-stack-trace-enable: true
          db-type: mysql
          log-slow-sql: true
          slow-sql-millis: 2000
        wall:
          config:
            multi-statement-allow: true
      web-stat-filter:
        enabled: true
        exclusions:
          - "*.js"
          - "*.gif"
          - "*.jpg"
          - "*.png"
          - "*.css"
          - ".ico"
          - "/druid/*"
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        login-username: admin
        login-password: asdf123456
  config:
    activate:
      on-profile: prod

swagger:
  enable: false